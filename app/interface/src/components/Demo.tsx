import "./Page.css";
import { useState } from "react";
import { Button } from "@mui/material";
import { useNavigate } from "react-router-dom";
import DisplayCard from "./DisplayCard";

const Demo = () => {
  const [result, setResult] = useState("");
  const [accuracy, setAccuracy] = useState("");
  const [isImageSelected,setIsImageSelected] = useState(false);
  const [selectedImage, setSelectedImage] = useState("");
  const resultTrue = "NOT GENERATED BY AI";
  const resultFalse = "GENERATED BY AI";
  const navigate = useNavigate();
  const [showAnimation, setShowAnimation] = useState(false);
  const [animationEnded, setAnimationEnded] = useState(false);

  const handleButtonClick = () => {
    setShowAnimation(true);
    setAnimationEnded(false); 
  };

  const handleAnimationEnd = () => {
    setAnimationEnded(true); // L'animation est terminée
    setShowAnimation(false);
  };

  const images = [
    { src: "/chat.jpg", statut: "real", accuracy: "87,45" },
    { src: "/chat_ia.webp", statut: "fake", accuracy: "91,88" }, //TODO : mettre les vraies accuracy du modèle
    { src: "/oiseau_ia.jpg", statut: "fake", accuracy: "89,14" },
    { src: "/oiseau.jpg", statut: "real", accuracy: "85,06" },
  ];

  const handleImageClick = (src:string, statut: string, accuracy: string) => {
    setIsImageSelected(true);
    setSelectedImage(src);
    setResult(statut);
    setAccuracy(accuracy); 
  };

  return (
    <div className="page">
        <div className="instructions">
            <p>Select one of the following image to see if it is authentic or generated by an AI</p>
        </div>
        <div
        style={{
            display: "grid",
            gridTemplateColumns: "repeat(2, 1fr)",
            gap: "20px",
            justifyItems: "center",
            maxWidth: "800px",
            margin: "0 auto",
          }}
      >
        {images.map((image) => (
          <img
          key={image.src}
          src={image.src}
          alt="Preview"
          className={`image ${selectedImage === image.src ? "selected" : ""}`}
          onClick={() => handleImageClick(image.src, image.statut, image.accuracy)}
          />
        ))}
      </div>
        {isImageSelected ? (
          <div className="card">
            <DisplayCard result={result} accuracy={accuracy} />
          </div>
        ) : (null)} 
        <div className="boutons">
          <Button
          variant="contained"
          onClick={() => navigate("/home")}
          sx={{
              backgroundColor: "#65b2a0",
              color: "#fff",
              "&:hover": { backgroundColor: "#386258" },
          }}
          >
          Home page
          </Button>
          <Button 
          className="trigger-button"
          onClick={handleButtonClick}
          sx={{
              backgroundColor: "#65b2a0",
              color: "#fff",
              "&:hover": { backgroundColor: "#386258" },
            }}>
              Easter egg
          </Button>
        </div>
        {showAnimation && !animationEnded && (
        <div className="scooter-cat">
          <img
            src="/long_egg.png"
            alt="Cat"
            className="scooter-image"
            onAnimationEnd={handleAnimationEnd}
          />
        </div>
      )}
    </div>
  );
};

export default Demo;
